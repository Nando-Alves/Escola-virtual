import streamlit as st
import google.generativeai as genai
import os

# --- Configura√ß√£o da API Gemini ---
# Tenta carregar a chave de API APENAS de uma vari√°vel de ambiente
api_key = os.environ.get("GOOGLE_API_KEY")

if api_key:
    genai.configure(api_key=api_key)
else:
    st.error("Chave de API do Google n√£o encontrada. Por favor, configure a vari√°vel de ambiente `GOOGLE_API_KEY`.")
    st.stop() # Para o aplicativo se a chave n√£o for encontrada

st.set_page_config(page_title="Gerador de Exerc√≠cios e Quiz", layout="centered")
st.title("üìö Gerador de Exerc√≠cios e Quiz com Gemini")
st.markdown("Crie exerc√≠cios e quest√µes de quiz personalizados usando intelig√™ncia artificial!")

# --- Fun√ß√µes de Gera√ß√£o com Gemini (Mesmas que antes) ---

def gerar_exercicio(topico, nivel):
    # ... (c√≥digo da fun√ß√£o gerar_exercicio)
    prompt = f"""
    Crie um exerc√≠cio de {topico} de n√≠vel {nivel}. Inclua o problema e a solu√ß√£o detalhada.
    O problema deve ser desafiador, mas claro.
    A solu√ß√£o deve ser passo a passo e f√°cil de entender.

    Formato esperado:
    **Problema:**
    [Seu problema aqui]

    **Solu√ß√£o:**
    [Sua solu√ß√£o detalhada aqui]
    """
    model = genai.GenerativeModel('gemini-1.5-flash')
    response = model.generate_content(prompt)
    return response.text

def gerar_quiz(topico, nivel):
    # ... (c√≥digo da fun√ß√£o gerar_quiz)
    prompt = f"""
    Crie uma pergunta de quiz de m√∫ltipla escolha sobre {topico} de n√≠vel {nivel}.
    A pergunta deve ser clara e as op√ß√µes devem ser plaus√≠veis, mas apenas uma correta.
    Inclua a pergunta, 4 op√ß√µes (A, B, C, D) e a resposta correta.

    Formato esperado:
    **Pergunta:**
    [Sua pergunta aqui]

    **Op√ß√µes:**
    A) [Op√ß√£o A]
    B) [Op√ß√£o B]
    C) [Op√ß√£o C]
    D) [Op√ß√£o D]

    **Resposta Correta:**
    [Letra da resposta correta, ex: B)]
    """
    model = genai.GenerativeModel('gemini-1.5-flash')
    response = model.generate_content(prompt)
    return response.text

# --- Interface do Streamlit (Mesma que antes) ---

# Sidebar para op√ß√µes de gera√ß√£o
with st.sidebar:
    st.header("Op√ß√µes de Gera√ß√£o")
    tipo_geracao = st.radio(
        "O que voc√™ quer gerar?",
        ("Exerc√≠cio", "Quiz"),
        help="Escolha entre gerar exerc√≠cios com solu√ß√µes ou quest√µes de quiz de m√∫ltipla escolha."
    )
    topico = st.text_input("Qual o t√≥pico/assunto?", "Matem√°tica Financeira", help="Ex: 'F√≠sica Qu√¢ntica', 'Literatura Brasileira', 'Programa√ß√£o Python'")
    nivel = st.selectbox(
        "Qual o n√≠vel de dificuldade?",
        ("B√°sico", "Intermedi√°rio", "Avan√ßado"),
        help="Defina a complexidade do conte√∫do gerado."
    )
    quantidade = st.slider("Quantas quest√µes/itens?", 1, 10, 3, help="N√∫mero de exerc√≠cios ou quest√µes de quiz a serem gerados.")

    st.markdown("---")
    gerar_btn = st.button("‚ú® Gerar Conte√∫do")
    st.markdown("---")
    st.info("Desenvolvido com Streamlit e Google Gemini API.")


# √Årea de exibi√ß√£o do conte√∫do
if gerar_btn:
    st.subheader(f"Conte√∫do Gerado de {tipo_geracao}")
    st.markdown("---") # Linha divis√≥ria para separar o cabe√ßalho do conte√∫do

    if tipo_geracao == "Exerc√≠cio":
        for i in range(quantidade):
            st.markdown(f"#### Exerc√≠cio {i+1}")
            with st.spinner(f"Gerando exerc√≠cio {i+1} de {quantidade}..."):
                exercicio_gerado = gerar_exercicio(topico, nivel)
                st.markdown(exercicio_gerado)
            if i < quantidade - 1: 
                st.markdown("---")
    elif tipo_geracao == "Quiz":
        for i in range(quantidade):
            st.markdown(f"#### Quest√£o {i+1}")
            with st.spinner(f"Gerando quest√£o {i+1} de {quantidade}..."):
                quiz_gerado = gerar_quiz(topico, nivel)
                st.markdown(quiz_gerado)
            if i < quantidade - 1: # Adiciona uma linha divis√≥ria entre as quest√µes
                st.markdown("---")
else:
    st.info("Selecione as op√ß√µes na barra lateral e clique em 'Gerar Conte√∫do' para ver os exerc√≠cios ou quizzes aqui.")